[{"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\index.js":"1","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\Directory.js":"2","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\DirectoryPages\\OrderForm.js":"3","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\productlisting\\ProductListing.js":"4","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\inventorymodals\\index.js":"5","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\DirectoryPages\\AccountsRec.js":"6","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\DirectoryPages\\AdminTools.js":"7","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\context\\InventoryContext.js":"8","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\context\\OrderContext.js":"9","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\DirectoryPages\\AccountsPay.js":"10","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\utils\\Api.js":"11","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\searchinventory\\SubComponent\\InventoryList.js":"12","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\categoryselection\\CategorySelection.js":"13","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\searchproduct\\SearchProduct.js":"14","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\customerdisplay\\CustomerDisplay.js":"15","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\containers\\App.js":"16","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\DirectoryPages\\Customers.js":"17","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\searchinventory\\subcomponent\\InventoryList.js":"18","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\DirectoryPages\\Inventory.js":"19","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\context\\LoginContext.js":"20","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\Login.js":"21","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\editproductsupplier\\EditProductSupplier.js":"22","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\editproductdetail\\EditProductDetail.js":"23","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\viewtransactions\\ViewTransactions.js":"24","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\productinventory\\ProductInventory.js":"25","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\ordercart\\OrderCart.js":"26","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\findrestaurantresults\\FindRestaurantResults.js":"27","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\supplierlist\\SupplierList.js":"28","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\searchinventory\\SearchInventoryMain.js":"29","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\inventorySearch\\InventorySearch.js":"30","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\addProductToCart\\AddProductToCart.js":"31","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\context\\DirectoryContext.js":"32","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\addInventoryInvoice\\AddInventoryInvoice.js":"33","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\addInventoryItem\\AddInventoryItem.js":"34"},{"size":691,"mtime":1607262477908,"results":"35","hashOfConfig":"36"},{"size":10694,"mtime":1607658814181,"results":"37","hashOfConfig":"36"},{"size":21566,"mtime":1607263708755,"results":"38","hashOfConfig":"36"},{"size":6991,"mtime":1607263478447,"results":"39","hashOfConfig":"36"},{"size":18375,"mtime":1607227434891,"results":"40","hashOfConfig":"36"},{"size":1189,"mtime":1606149579128,"results":"41","hashOfConfig":"36"},{"size":1179,"mtime":1606149565348,"results":"42","hashOfConfig":"36"},{"size":1717,"mtime":1607642194228,"results":"43","hashOfConfig":"36"},{"size":655,"mtime":1603955563609,"results":"44","hashOfConfig":"36"},{"size":1186,"mtime":1606149590655,"results":"45","hashOfConfig":"36"},{"size":3682,"mtime":1606711003901,"results":"46","hashOfConfig":"36"},{"size":8390,"mtime":1606133523752,"results":"47","hashOfConfig":"36"},{"size":1195,"mtime":1607263373638,"results":"48","hashOfConfig":"36"},{"size":3283,"mtime":1607263435826,"results":"49","hashOfConfig":"36"},{"size":1677,"mtime":1606149728039,"results":"50","hashOfConfig":"36"},{"size":2207,"mtime":1607285914696,"results":"51","hashOfConfig":"36"},{"size":8279,"mtime":1607263694253,"results":"52","hashOfConfig":"36"},{"size":8802,"mtime":1607041910204,"results":"53","hashOfConfig":"36"},{"size":2027,"mtime":1607309784433,"results":"54","hashOfConfig":"36"},{"size":177,"mtime":1606150300854,"results":"55","hashOfConfig":"36"},{"size":8558,"mtime":1608065857331,"results":"56","hashOfConfig":"36"},{"size":10289,"mtime":1607263566993,"results":"57","hashOfConfig":"36"},{"size":5476,"mtime":1607263580526,"results":"58","hashOfConfig":"36"},{"size":5070,"mtime":1606631406671,"results":"59","hashOfConfig":"36"},{"size":9624,"mtime":1607263487696,"results":"60","hashOfConfig":"36"},{"size":8672,"mtime":1607263504888,"results":"61","hashOfConfig":"36"},{"size":1933,"mtime":1606149693222,"results":"62","hashOfConfig":"36"},{"size":8416,"mtime":1607246614184,"results":"63","hashOfConfig":"36"},{"size":3891,"mtime":1607281446321,"results":"64","hashOfConfig":"36"},{"size":1472,"mtime":1607214145244,"results":"65","hashOfConfig":"36"},{"size":11428,"mtime":1607263611487,"results":"66","hashOfConfig":"36"},{"size":187,"mtime":1605751439289,"results":"67","hashOfConfig":"36"},{"size":12075,"mtime":1607663368864,"results":"68","hashOfConfig":"36"},{"size":15686,"mtime":1607662981935,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1fl9zil",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"72"},"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\index.js",[],["149","150"],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\Directory.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\DirectoryPages\\OrderForm.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\productlisting\\ProductListing.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\inventorymodals\\index.js",[],["151","152"],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\DirectoryPages\\AccountsRec.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\DirectoryPages\\AdminTools.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\context\\InventoryContext.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\context\\OrderContext.js",[],["153","154"],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\DirectoryPages\\AccountsPay.js",[],["155","156"],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\utils\\Api.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\searchinventory\\SubComponent\\InventoryList.js",[],["157","158"],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\categoryselection\\CategorySelection.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\searchproduct\\SearchProduct.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\customerdisplay\\CustomerDisplay.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\containers\\App.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\DirectoryPages\\Customers.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\searchinventory\\subcomponent\\InventoryList.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\DirectoryPages\\Inventory.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\context\\LoginContext.js",[],["159","160"],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\pages\\Login.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\editproductsupplier\\EditProductSupplier.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\editproductdetail\\EditProductDetail.js",[],["161","162"],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\viewtransactions\\ViewTransactions.js",[],["163","164"],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\productinventory\\ProductInventory.js",["165","166","167"],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\ordercart\\OrderCart.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\findrestaurantresults\\FindRestaurantResults.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\supplierlist\\SupplierList.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\searchinventory\\SearchInventoryMain.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\inventorySearch\\InventorySearch.js",["168"],"import React, {useContext, useRef, useEffect, useState} from 'react';\r\nimport Api from '../../utils/Api';\r\nimport {InputGroup, Button, FormControl} from 'react-bootstrap';\r\nimport InventoryContext from '../../context/InventoryContext';\r\n\r\nconst InventorySearch = (props) => {\r\n    const inventoryContext = useContext(InventoryContext)\r\n    const searchInputRef = useRef(null)\r\n    const [searchTimeout, setSearchTimeout] = useState(false) \r\n\r\n    const searchProductByInput = () => {\r\n        setSearchTimeout(true)\r\n        props.toggleLoading()\r\n        if(props.returnInput){\r\n            props.returnInput(searchInputRef.current.value.trim())\r\n        }\r\n        //This API should be changed to searchProductByInput\r\n        Api.searchInventoryByInput({\r\n            searchInput: searchInputRef.current.value.trim()\r\n        }).then(products => {\r\n            inventoryContext.storeProducts(products.data)\r\n            props.toggleLoaded()\r\n            setSearchTimeout(false)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n                <Button disabled={searchTimeout?true:false} variant={searchTimeout?'secondary':'warning'} onClick={searchProductByInput}>Search</Button>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n                placeholder=\"Product Name or ID\"\r\n                ref={searchInputRef}\r\n            />\r\n        </InputGroup>\r\n    )\r\n}\r\nexport default InventorySearch;","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\addProductToCart\\AddProductToCart.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\context\\DirectoryContext.js",[],"C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\addInventoryInvoice\\AddInventoryInvoice.js",["169","170","171","172"],"import React,{useState, useContext, useRef, useEffect} from 'react';\r\nimport {Container, Row, Col, Button, Spinner, Modal, InputGroup, FormControl, Dropdown, DropdownButton} from 'react-bootstrap';\r\nimport AddInventoryItem from '../addInventoryItem/AddInventoryItem';\r\nimport InventoryContext from '../../context/InventoryContext';\r\nimport API from '../../utils/Api'\r\nimport './addInventoryInvoice.css'\r\n\r\n//Creating new inventory operation order\r\n//--Create accounts_payable_invoices record\r\n//--Create new inventory record for each item using accounts_payable_invoices.id\r\n\r\nconst AddInventoryInvoice = () => {\r\n    const inputRef = useRef(null)\r\n    const inventoryContext = useContext(InventoryContext);\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [modalData, setModalData] = useState(null)\r\n    // const [screenWidth, setScreenWidth] =useState(null)\r\n    // const [screenHeight, setScreenHeight] = useState(null)\r\n    // const [itemListPos, setitemListPos] =useState(null)\r\n    const [itemListStyle, setitemListStyle] = useState(null)\r\n    const [addItemLoading, setAddItemLoading] = useState(false)\r\n\r\n    const modalSwitchFunction = () => {\r\n        switch (modalData.type){\r\n            case 'add-new-item':\r\n                return(\r\n                    <AddInventoryItem\r\n                        closeModal = {() => setShowModal(false)}\r\n                    />\r\n                )\r\n            default:\r\n                return(\r\n                    null\r\n                )\r\n        }\r\n    }\r\n\r\n    const checkInvDetails = () => {\r\n        setAddItemLoading(true)\r\n        let inputValues = [\"invoice-number\",\"supplier-name\",\"receive-date\"]\r\n        let checkInputValues = [];\r\n        inputValues.forEach(inputValue => {\r\n            if(document.getElementById(inputValue).value === undefined\r\n            || document.getElementById(inputValue).value === null\r\n            || document.getElementById(inputValue).value === ''){\r\n                document.getElementById(inputValue).style.borderColor = 'red';\r\n                document.getElementById(inputValue).style.borderStyle = 'solid';\r\n                document.getElementById(inputValue).style.borderWidth = '2px';\r\n                checkInputValues.push(false)\r\n            }else{\r\n                document.getElementById(inputValue).style.removeProperty('border-color')\r\n                document.getElementById(inputValue).style.removeProperty('border-style')\r\n                document.getElementById(inputValue).style.removeProperty('border-width')\r\n            }\r\n        })\r\n        if(checkInputValues.every(value => {return value? true: false})){\r\n            setAddItemLoading(false)\r\n            handleModelSwitch('add-new-item','xl')\r\n        }else{\r\n            setAddItemLoading(false)\r\n        }\r\n    }\r\n\r\n    const loadingSpinner = <Spinner animation=\"border\" role=\"status\" size='sm'>\r\n        <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n\r\n    const handleModelSwitch = (type, size, data) => {\r\n        setModalData({\r\n            type:type,\r\n            size:size?size:'lg',\r\n            data: data?data:null\r\n        })\r\n        setShowModal(true)\r\n    }\r\n\r\n    const handleInputchange = e => {\r\n        let newInvoiceDetails = {...inventoryContext.newInvoiceDetails}\r\n        console.log(e.target.value)\r\n        let fieldName = e.target.id.replace(/-/g,'_')\r\n        newInvoiceDetails[fieldName] = e.target.value\r\n        inventoryContext.storeNewInvoiceDetails(newInvoiceDetails)\r\n        console.log(inventoryContext.newInvoiceDetails)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     const heightHandler = (size) => {\r\n    //         setScreenHeight(size)\r\n    //     }\r\n\r\n    //     const widthHandler = (size) =>{\r\n    //         setScreenWidth(size)\r\n    //     }\r\n\r\n    //     window.addEventListener('resize',() => {\r\n    //         if(window.innerHeight !== screenHeight){\r\n    //             heightHandler(window.innerHeight)\r\n    //         }\r\n    //         if(window.innerWidth !== screenHeight){\r\n    //             widthHandler(window.innerHeight)\r\n    //         }\r\n    //     })\r\n    // })\r\n\r\n    // useEffect(()=>{\r\n    //     const handleItemListPos = (innerHeight) => {\r\n    //         let itemListPos = document.querySelector('.invoice-item-list').getBoundingClientRect()\r\n    //         let elHeight = innerHeight - itemListPos.y\r\n    //         console.log(elHeight)\r\n    //         setitemListStyle({height: `${elHeight-20}px`, backgroundColor: 'black'})\r\n    //     }\r\n\r\n    //     window.addEventListener('resize',() => {\r\n    //         handleItemListPos(window.innerHeight)\r\n    //     });\r\n    // },[])\r\n\r\n    return(\r\n        <>\r\n        <Container fluid>\r\n            <Row className='justify-content-md-center' sm={1} md={2} lg={2}>\r\n                <Col className='invoice-detail-column' md={6} lg={4}>\r\n                    <Row>  \r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Invoice Number</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                            placeholder=\"Invoice Number\"\r\n                            aria-label=\"Invoice Number\"\r\n                            aria-describedby=\"invoice-number\"\r\n                            id=\"invoice-number\" \r\n                            onChange={(e) => handleInputchange(e)}\r\n                            />\r\n                        </InputGroup>     \r\n                    </Row>\r\n                    <Row>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>PO Number</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                            id=\"purchase-order-number\"\r\n                            placeholder=\"PO Number\"\r\n                            aria-label=\"PO Number\"\r\n                            aria-describedby=\"po-number\"\r\n                            onChange={(e) => handleInputchange(e)}\r\n                            />\r\n                        </InputGroup>   \r\n                    </Row>\r\n                    <Row>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend\r\n                                id='supplier-input-group-dropdown'\r\n                            >\r\n                                {/* <InputGroup.Text>Supplier</InputGroup.Text> */}\r\n                                <DropdownButton\r\n                                as={InputGroup.Prepend}\r\n                                variant=\"secondary\"\r\n                                title=\"Supplier\"\r\n                                id=\"input-group-dropdown\"\r\n                                >\r\n                                    <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n                                </DropdownButton>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                            id=\"supplier-name\"\r\n                            placeholder=\"Supplier\"\r\n                            aria-label=\"Supplier\"\r\n                            aria-describedby=\"supplier-name\"\r\n                            onChange={(e) => handleInputchange(e)}\r\n                            >\r\n                            </FormControl>\r\n                        </InputGroup>   \r\n                    </Row>\r\n                    <Row>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Invoice Total</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                            style={{backgroundColor:'lightgrey'}}\r\n                            disabled\r\n                            id=\"invoice-total\"\r\n                            placeholder=\"$0.00\"\r\n                            aria-label=\"Invoice Total\"\r\n                            aria-describedby=\"invoice-total\"\r\n                            type='number'\r\n                            onChange={(e) => handleInputchange(e)}\r\n                            />\r\n                        </InputGroup>   \r\n                    </Row>\r\n                </Col>\r\n                <Col className='invoice-detail-column' md={6} lg={4}>\r\n                    <Row>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Receive Date</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                            id=\"receive-date\"\r\n                            placeholder=\"MM/DD/YYYY\"\r\n                            aria-label=\"Receive Date\"\r\n                            aria-describedby=\"receive-date\"\r\n                            type='date'\r\n                            onChange={(e) => handleInputchange(e)}\r\n                            />\r\n                        </InputGroup> \r\n                    </Row>\r\n                    <Row>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Due Date</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                            id=\"due-date\"\r\n                            placeholder=\"MM/DD/YYYY\"\r\n                            aria-label=\"Due Date\"\r\n                            aria-describedby=\"due-date\"\r\n                            type='date'\r\n                            onChange={(e) => handleInputchange(e)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Row>\r\n                    <Row>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Paid Amount</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                            placeholder=\"0.00\"\r\n                            aria-label=\"Paid Amount\"\r\n                            aria-describedby=\"paid-amount\"\r\n                            type='number'\r\n                            id=\"paid-amount\"\r\n                            onChange={(e) => handleInputchange(e)}\r\n                            />\r\n                        </InputGroup> \r\n                    </Row>\r\n                    <Row>\r\n                        <Button variant='warning' style={{width: '100%'}} onClick={()=>checkInvDetails('add-new-item','xl')}>\r\n                            {addItemLoading? loadingSpinner: 'Add Invoice Item'}\r\n                        </Button>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Col className='invoice-item-list' style={itemListStyle}>\r\n                    {inventoryContext.newInvoiceItems?\r\n                        inventoryContext.newInvoiceItems.map((item, index) => {\r\n                            return(\r\n                                <div key={index}>{item.name_english}</div>\r\n                            )\r\n                        })\r\n                    :\r\n                    <Row className='justify-content-md-center'>\r\n                        <Col style={{textAlign: 'center'}}>No Items</Col>\r\n                    </Row>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n        {showModal?\r\n            <Modal\r\n            show={showModal}\r\n            onHide={() => setShowModal(false)}\r\n            backdrop=\"static\"\r\n            size={modalData.size}\r\n            keyboard={false}>\r\n                {modalSwitchFunction()}\r\n            </Modal>\r\n            :\r\n            null\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddInventoryInvoice;","C:\\Users\\Mao\\Desktop\\cagoodandfresh\\client\\src\\components\\addInventoryItem\\AddInventoryItem.js",["173","174"],"import React, {useContext, useState, useRef, useEffect} from 'react';\r\nimport { Modal, Button, Container, Row, Col , Spinner, InputGroup, FormControl} from 'react-bootstrap';\r\nimport API from '../../utils/Api';\r\nimport InventoryContext from '../../context/InventoryContext'\r\nimport InventorySearch from '../../components/inventorySearch/InventorySearch'\r\nimport './addInventoryItem.css'\r\n\r\nconst AddInventoryRecord = (props) => {\r\n    const itemTemplate = {\r\n        product_code: undefined,\r\n        name_english: undefined,\r\n        name_chinese: undefined,\r\n        upc: undefined,\r\n        invoice_quantity: undefined,\r\n        purchase_order_number: undefined,\r\n        //ap_invoice_number is the same as newInvoiceDetails.invoice_number\r\n        ap_invoice_number: undefined,\r\n        receive_date: undefined,\r\n        cost: undefined,\r\n        sale_price: undefined,\r\n        supplier_id: undefined,\r\n        supplier_name: undefined,\r\n    }\r\n\r\n    const inventoryContext = useContext(InventoryContext)\r\n    const [resultDisplay, setResultDisplay] = useState(null)\r\n    const [productDisplay,setProductDisplay] = useState()\r\n    const [activeProduct, setActiveProduct] = useState(null)\r\n    const [itemDetail, setItemDetail] = useState(itemTemplate)\r\n\r\n    const handleSelectedProduct = (product, productIndex) => {\r\n        setActiveProduct(productIndex)\r\n        setProductDisplay('loading')\r\n        console.log(product)\r\n        inventoryContext.storeSelectedProduct(product)\r\n        API.getInventoryByProductID({\r\n            productCode: product.id,\r\n            //allInventory means get all inventory including 0 quantity left.\r\n            allInventory: true,\r\n        }).then( results => {\r\n            inventoryContext.storeInventory(results.data)\r\n            API.getProductSuppliers({\r\n                supplier_ids: [product.supplier_primary_id,product.supplier_secondary_id,product.supplier_tertiary_id]\r\n            }).then( result => {\r\n                inventoryContext.storeProductSuppliers(result.data)\r\n                setItemDetail({\r\n                    ...itemDetail,\r\n                    //Same as product.id\r\n                    product_code: product.id,\r\n                    name_english: product.name_english,\r\n                    name_chinese: product.name_chinese,\r\n                    upc: product.upc,\r\n                    cost: undefined,\r\n                    sale_price: undefined,\r\n                    invoice_quantity: undefined,\r\n                    //ap_invoice_number is the same as newInvoiceDetails.invoice_number      \r\n                })\r\n                setProductDisplay('display-product')\r\n            }).catch( err => {\r\n                console.log(err)\r\n            })\r\n        }).catch( err =>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const handleInputchange = e => {\r\n        console.log(e.target.value)\r\n        let fieldName = e.target.id.replace(/-/g,'_')\r\n        setItemDetail({...itemDetail, [fieldName]: e.target.value})\r\n        console.log(itemDetail)\r\n    }\r\n\r\n    // {\r\n    //     //Same as product.id\r\n    //     product_code: undefined,\r\n    //     name_english: undefined,\r\n    //     name_chinese: undefined,\r\n    //     upc: undefined,\r\n    //     invoice_quantity: undefined,\r\n    //     purchase_order_number: undefined,\r\n    //     //ap_invoice_number is the same as newInvoiceDetails.invoice_number\r\n    //     ap_invoice_number: undefined,\r\n    //     receive_date: undefined,\r\n    //     cost: undefined,\r\n    //     sale_price: undefined,\r\n    //     supplier_id: undefined,\r\n    //     supplier_name: undefined,\r\n    // },\r\n\r\n    useEffect(() => {\r\n        setItemDetail({\r\n        //Same as product.id\r\n        purchase_order_number: inventoryContext.newInvoiceDetails.purchase_order_number,\r\n        //ap_invoice_number is the same as newInvoiceDetails.invoice_number\r\n        ap_invoice_number: inventoryContext.newInvoiceDetails.invoice_number,\r\n        receive_date: inventoryContext.newInvoiceDetails.receive_date,\r\n        supplier_id: inventoryContext.newInvoiceDetails.supplier_id,\r\n        supplier_name: inventoryContext.newInvoiceDetails.supplier_name, \r\n        })\r\n    }, [])\r\n\r\n    const productDisplaySwitch = () => {\r\n        switch (productDisplay){\r\n            case 'display-product':\r\n                return(\r\n                    <>\r\n                        <Row>\r\n                            <Col><h5>{inventoryContext.selectedProduct.name_english}</h5></Col>\r\n                        </Row>\r\n                        <Row xs={1} md={1} lg={2}>\r\n                            <Col>\r\n                                <div className='product-detail-row'>\r\n                                    <p style={{display:'inline'}}><b>ID</b>:&nbsp;</p>\r\n                                    <span style={{display: 'inline', float: 'right'}}>{inventoryContext.selectedProduct.id}</span>\r\n                                </div>\r\n                                <div className='product-detail-row'>\r\n                                    <p style={{display:'inline'}}><b>Holding</b>:&nbsp;</p>\r\n                                    <span style={{display: 'inline',float: 'right'}}>{inventoryContext.selectedProduct.holding.toUpperCase()}</span>\r\n                                </div>\r\n                                <div className='product-detail-row'>\r\n                                    <p style={{display:'inline'}}><b>Location</b>:&nbsp;</p>\r\n                                    <span style={{display: 'inline', float: 'right'}}>{inventoryContext.selectedProduct.location.toUpperCase()}</span>\r\n                                </div>\r\n                            </Col>\r\n                            <Col>\r\n                                <div className='product-detail-row'>\r\n                                    <p style={{display:'inline'}}><b>Category</b>:&nbsp;</p>\r\n                                    <span style={{display: 'inline', float: 'right'}}>{inventoryContext.selectedProduct.category.toUpperCase()}</span>\r\n                                </div>\r\n                                <div className='product-detail-row'>\r\n                                    <p style={{display:'inline'}}><b>Weight</b>:&nbsp;</p>\r\n                                    <span style={{display: 'inline',float: 'right'}}>{inventoryContext.selectedProduct.weight}&nbsp;{inventoryContext.selectedProduct.measurement_system.toUpperCase()}</span>\r\n                                </div>\r\n                                <div className='product-detail-row'>\r\n                                    <p style={{display:'inline'}}><b>UPC</b>:&nbsp;</p>\r\n                                    <span style={{display: 'inline', float: 'right'}}>{inventoryContext.selectedProduct.upc}</span>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2\">\r\n                            <Col>\r\n                            <p style={{marginBottom: '0px', paddingLeft: '6px'}}><b>Description</b>:&nbsp;</p>\r\n                            <div className='product-detail-row'>\r\n                                <p>{inventoryContext.selectedProduct.description}</p>\r\n                            </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row xs={1} md={1} lg={2}>\r\n                            <Col className='invoice-item-input-column'>\r\n                                <InputGroup className=\"mb-2\">\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Text>Quantity</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl\r\n                                    placeholder=\"0\"\r\n                                    aria-label=\"Quantity\"\r\n                                    type=\"number\"\r\n                                    aria-describedby=\"inventory-item-quantity\"\r\n                                    id=\"invoice-quantity\"\r\n                                    onChange={(e) => handleInputchange(e)}\r\n                                    />\r\n                                </InputGroup>\r\n                                <InputGroup className=\"mb-2\">\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Text>Cost</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl\r\n                                    placeholder=\"0.00\"\r\n                                    aria-label=\"Cost\"\r\n                                    aria-describedby=\"inventory-item-cost\"\r\n                                    type=\"number\"\r\n                                    id=\"cost\"\r\n                                    onChange={(e) => handleInputchange(e)}\r\n                                    />\r\n                                </InputGroup> \r\n                                <InputGroup className=\"mb-2\">\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Text>Sale Price</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl\r\n                                    placeholder=\"0.00\"\r\n                                    aria-label=\"Sale Price\"\r\n                                    type=\"number\"\r\n                                    aria-describedby=\"inventory-item-sale_price\"\r\n                                    id=\"sale-price\"\r\n                                    onChange={(e) => handleInputchange(e)}\r\n                                    />\r\n                                </InputGroup>\r\n                                <InputGroup className=\"mb-2\">\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Text>Supplier</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl\r\n                                    style={{backgroundColor:'#4d4b4b'}}\r\n                                    disabled\r\n                                    placeholder={\r\n                                        itemDetail.supplier_name?\r\n                                        itemDetail.supplier_name:\r\n                                        \"None\"}\r\n                                    aria-label=\"Supplier\"\r\n                                    aria-describedby=\"inventory-item-supplier\"\r\n                                    id=\"inventory-item-supplier\"\r\n                                    />\r\n                                </InputGroup> \r\n                                <InputGroup className=\"mb-2\">\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Text>Total Cost</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl\r\n                                    style={{backgroundColor:'#4d4b4b'}}\r\n                                    disabled\r\n                                    placeholder={\r\n                                        itemDetail.cost && itemDetail.invoice_quantity?\r\n                                        `$${(+itemDetail.cost*+itemDetail.invoice_quantity).toFixed(2)}`:\r\n                                        \"Enter Cost and Quantity\"}\r\n                                    aria-label=\"Supplier\"\r\n                                    aria-describedby=\"total-cost\"\r\n                                    id=\"inventory-item-total-cost\"\r\n                                    />\r\n                                </InputGroup> \r\n                            </Col>\r\n                            <Col>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                )\r\n            case 'loading':\r\n                return(\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Spinner animation=\"border\" role=\"status\" size='lg' style={{left: '45%', top: '50%', margin: '0px', position: 'absolute'}}>\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </Row>\r\n                )\r\n            default:\r\n                return(\r\n                    null\r\n                )\r\n        }\r\n    }\r\n\r\n    const searchResultComponentSwitch = () =>{\r\n        switch (resultDisplay){\r\n            case 'loading':\r\n                return(\r\n                    <Spinner animation=\"border\" role=\"status\" size='lg' style={{left: '45%', top: '50%', margin: '0px', position: 'absolute'}}>\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                )\r\n            case 'display-result':\r\n                return(\r\n                    inventoryContext.products.map((product,index) => {\r\n                        return(\r\n                            <div key={index}\r\n                                className = 'listed-product'\r\n                                style={{\r\n                                    padding: '5px',\r\n                                    backgroundColor: activeProduct===index?'#5f5f5f':null,\r\n                                    borderRadius: '5px',\r\n                                    marginBottom: '2px'\r\n                                }}\r\n                                onClick = {activeProduct===index?null:() => handleSelectedProduct(product,index)}\r\n                            ><span style={{display: 'inline'}}>{activeProduct===index?'► ':null}</span>\r\n                            <h6 style={{display: 'inline'}}>{product.name_english}</h6></div>\r\n                        )\r\n                    })\r\n                )\r\n            default:\r\n                return(\r\n                    <></>\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add Item To Invoice</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            </Modal.Body>\r\n                <Container fluid style={{marginBottom: '10px'}}>\r\n                    <Row xs={1} md={1} lg={2}>\r\n                        <Col md={6} lg={4}>\r\n                            <InventorySearch\r\n                                toggleLoading = {() => setResultDisplay('loading')}\r\n                                toggleLoaded = {() => setResultDisplay('display-result')}\r\n                            />\r\n                            <div id=\"add-inventory-item-search-result\">\r\n                               {searchResultComponentSwitch()}\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={6} lg={8}>\r\n                            {inventoryContext.selectedProduct?\r\n                            productDisplaySwitch()\r\n                            :null}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            <Modal.Footer>\r\n                <Row>\r\n                    <Col>\r\n                        <Button variant=\"secondary\" onClick={props.closeModal}>\r\n                            Close\r\n                        </Button>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button variant=\"warning\" onClick={props.closeModal}>\r\n                            Add\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Modal.Footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddInventoryRecord;",{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"175","replacedBy":"179"},{"ruleId":"177","replacedBy":"180"},{"ruleId":"175","replacedBy":"181"},{"ruleId":"177","replacedBy":"182"},{"ruleId":"175","replacedBy":"183"},{"ruleId":"177","replacedBy":"184"},{"ruleId":"175","replacedBy":"185"},{"ruleId":"177","replacedBy":"186"},{"ruleId":"175","replacedBy":"187"},{"ruleId":"177","replacedBy":"188"},{"ruleId":"175","replacedBy":"189"},{"ruleId":"177","replacedBy":"190"},{"ruleId":"175","replacedBy":"191"},{"ruleId":"177","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":2,"column":33,"nodeType":"195","messageId":"196","endLine":2,"endColumn":42},{"ruleId":"193","severity":1,"message":"197","line":2,"column":44,"nodeType":"195","messageId":"196","endLine":2,"endColumn":47},{"ruleId":"193","severity":1,"message":"198","line":2,"column":49,"nodeType":"195","messageId":"196","endLine":2,"endColumn":52},{"ruleId":"193","severity":1,"message":"199","line":1,"column":36,"nodeType":"195","messageId":"196","endLine":1,"endColumn":45},{"ruleId":"193","severity":1,"message":"199","line":1,"column":45,"nodeType":"195","messageId":"196","endLine":1,"endColumn":54},{"ruleId":"193","severity":1,"message":"200","line":5,"column":8,"nodeType":"195","messageId":"196","endLine":5,"endColumn":11},{"ruleId":"193","severity":1,"message":"201","line":13,"column":11,"nodeType":"195","messageId":"196","endLine":13,"endColumn":19},{"ruleId":"193","severity":1,"message":"202","line":20,"column":27,"nodeType":"195","messageId":"196","endLine":20,"endColumn":43},{"ruleId":"193","severity":1,"message":"203","line":1,"column":38,"nodeType":"195","messageId":"196","endLine":1,"endColumn":44},{"ruleId":"204","severity":1,"message":"205","line":101,"column":8,"nodeType":"206","endLine":101,"endColumn":10,"suggestions":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],["208"],["209"],["208"],["209"],["208"],["209"],["208"],["209"],["208"],["209"],["208"],["209"],["208"],["209"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'useEffect' is defined but never used.","'API' is defined but never used.","'inputRef' is assigned a value but never used.","'setitemListStyle' is assigned a value but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'inventoryContext.newInvoiceDetails.invoice_number', 'inventoryContext.newInvoiceDetails.purchase_order_number', 'inventoryContext.newInvoiceDetails.receive_date', 'inventoryContext.newInvoiceDetails.supplier_id', and 'inventoryContext.newInvoiceDetails.supplier_name'. Either include them or remove the dependency array.","ArrayExpression",["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},"Update the dependencies array to be: [inventoryContext.newInvoiceDetails.invoice_number, inventoryContext.newInvoiceDetails.purchase_order_number, inventoryContext.newInvoiceDetails.receive_date, inventoryContext.newInvoiceDetails.supplier_id, inventoryContext.newInvoiceDetails.supplier_name]",{"range":"213","text":"214"},[4181,4183],"[inventoryContext.newInvoiceDetails.invoice_number, inventoryContext.newInvoiceDetails.purchase_order_number, inventoryContext.newInvoiceDetails.receive_date, inventoryContext.newInvoiceDetails.supplier_id, inventoryContext.newInvoiceDetails.supplier_name]"]